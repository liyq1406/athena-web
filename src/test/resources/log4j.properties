# zhangli set this document in 2012-04-28
# Set root category priority to INFO and its only appender to FILE.
# 基本优先级别
# log4j.rootCategory= INFO
#
# Set the code priority to DEBUG
#

# ----------------------------------------       以下可以选择性删除     ------------------------------------------------- #

# ----------------------------------------       参考系日志设置开始     ------------------------------------------------- #
# 基本日志                                                              级别,全部日志,错误日志,控制台输出             (按需控制输出,不要影响程序效率)
log4j.category.com.athena.ckx = INFO,CkxLog,CkxErrorLog,Console

# 全部日志配置,必须在对应盘符建立/logs/ckx文件夹,windows系统必须有盘符,unix系统无盘符
log4j.appender.CkxLog=org.apache.log4j.RollingFileAppender
log4j.appender.CkxLog.File=/logs/ckx/RunLog.log
log4j.appender.CkxLog.layout=com.log4j.ThreadIDPatternLayout
log4j.appender.CkxLog.maxFileSize = 3MB
log4j.appender.CkxLog.maxBackupIndex = 5
log4j.appender.CkxLog.layout.ConversionPattern=[%T][%t][%d{ISO8601}] %-5p %-x %X{user} %n     %m%n

# 错误日志单独配置,必须在对应盘符建立/logs/ckx文件夹,windows系统必须有盘符,unix系统无盘符
log4j.appender.CkxErrorLog=org.apache.log4j.RollingFileAppender
log4j.appender.CkxErrorLog.File=/logs/ckx/ErrorLog.log
log4j.appender.CkxErrorLog.layout=com.log4j.ThreadIDPatternLayout
log4j.appender.CkxErrorLog.Threshold=error
log4j.appender.CkxErrorLog.maxFileSize = 3MB
log4j.appender.CkxErrorLog.maxBackupIndex = 5
log4j.appender.CkxErrorLog.layout.ConversionPattern=[%T][%t][%d{ISO8601}] %C{3}.%M() %-5p %-x %X{user} %n     %m%n

# ----------------------------------------       参考系日志设置结束     ------------------------------------------------- #



# ----------------------------------------       需求计算日志设置开始     ------------------------------------------------- #
# 基本日志                                                              级别,全部日志,错误日志,控制台输出             (按需控制输出,不要影响程序效率)
log4j.category.com.athena.xqjs = INFO,XqjsLog,XqjsErrorLog,Console

# 全部日志配置,必须在对应盘符建立/logs/xqjs文件夹,windows系统必须有盘符,unix系统无盘符
log4j.appender.XqjsLog=org.apache.log4j.RollingFileAppender
log4j.appender.XqjsLog.File=/logs/xqjs/RunLog.log
log4j.appender.XqjsLog.layout=com.log4j.ThreadIDPatternLayout
log4j.appender.XqjsLog.maxFileSize = 3MB
log4j.appender.XqjsLog.maxBackupIndex = 5
log4j.appender.XqjsLog.layout.ConversionPattern=[%T][%t][%d{ISO8601}] %-5p %-x %X{user} %n     %m%n

# 错误日志单独配置,必须在对应盘符建立/logs/xqjs文件夹,windows系统必须有盘符,unix系统无盘符
log4j.appender.XqjsErrorLog=org.apache.log4j.RollingFileAppender
log4j.appender.XqjsErrorLog.File=/logs/xqjs/ErrorLog.log
log4j.appender.XqjsErrorLog.layout=com.log4j.ThreadIDPatternLayout
log4j.appender.XqjsErrorLog.Threshold=error
log4j.appender.XqjsErrorLog.maxFileSize = 3MB
log4j.appender.XqjsErrorLog.maxBackupIndex = 5
log4j.appender.XqjsErrorLog.layout.ConversionPattern=[%T][%t][%d{ISO8601}] %C{3}.%M() %-5p %-x %X{user} %n     %m%n

# ----------------------------------------       需求计算日志设置结束     ------------------------------------------------- #

# ----------------------------------------       仓库日志设置开始     ------------------------------------------------- #
# 基本日志                                                              级别,全部日志,错误日志,控制台输出             (按需控制输出,不要影响程序效率)
log4j.category.com.athena.ck = INFO,CkLog,CkErrorLog,Console

# 全部日志配置,必须在对应盘符建立/logs/ck文件夹,windows系统必须有盘符,unix系统无盘符
log4j.appender.CkLog=org.apache.log4j.RollingFileAppender
log4j.appender.CkLog.File=/logs/ck/RunLog.log
log4j.appender.CkLog.layout=com.log4j.ThreadIDPatternLayout
log4j.appender.CkLog.maxFileSize = 3MB
log4j.appender.CkLog.maxBackupIndex = 5
log4j.appender.CkLog.layout.ConversionPattern=[%T][%t][%d{ISO8601}] %-5p %-x %X{user} %n     %m%n

# 错误日志单独配置,必须在对应盘符建立/logs/ck文件夹,windows系统必须有盘符,unix系统无盘符
log4j.appender.CkErrorLog=org.apache.log4j.RollingFileAppender
log4j.appender.CkErrorLog.File=/logs/ck/ErrorLog.log
log4j.appender.CkErrorLog.layout=com.log4j.ThreadIDPatternLayout
log4j.appender.CkErrorLog.Threshold=error
log4j.appender.CkErrorLog.maxFileSize = 3MB
log4j.appender.CkErrorLog.maxBackupIndex = 5
log4j.appender.CkErrorLog.layout.ConversionPattern=[%T][%t][%d{ISO8601}] %C{3}.%M() %-5p %-x %X{user} %n     %m%n

# ----------------------------------------       仓库日志设置结束     ------------------------------------------------- #

# ----------------------------------------       打印日志设置开始     ------------------------------------------------- #
# 基本日志                                                              级别,全部日志,错误日志,控制台输出             (按需控制输出,不要影响程序效率)
log4j.category.com.athena.print = INFO,PrintLog,PrintErrorLog,Console

# 全部日志配置,必须在对应盘符建立/logs/print文件夹,windows系统必须有盘符,unix系统无盘符
log4j.appender.PrintLog=org.apache.log4j.RollingFileAppender
log4j.appender.PrintLog.File=/logs/print/RunLog.log
log4j.appender.PrintLog.layout=com.log4j.ThreadIDPatternLayout
log4j.appender.PrintLog.maxFileSize = 3MB
log4j.appender.PrintLog.maxBackupIndex = 5
log4j.appender.PrintLog.layout.ConversionPattern=[%T][%t][%d{ISO8601}] %-5p %-x %X{user} %n     %m%n

# 错误日志单独配置,必须在对应盘符建立/logs/print文件夹,windows系统必须有盘符,unix系统无盘符
log4j.appender.PrintErrorLog=org.apache.log4j.RollingFileAppender
log4j.appender.PrintErrorLog.File=/logs/print/ErrorLog.log
log4j.appender.PrintErrorLog.layout=com.log4j.ThreadIDPatternLayout
log4j.appender.PrintErrorLog.Threshold=error
log4j.appender.PrintErrorLog.maxFileSize = 3MB
log4j.appender.PrintErrorLog.maxBackupIndex = 5
log4j.appender.PrintErrorLog.layout.ConversionPattern=[%T][%t][%d{ISO8601}] %C{3}.%M() %-5p %-x %X{user} %n     %m%n

# ----------------------------------------       打印日志设置结束     ------------------------------------------------- #


# ----------------------------------------       排产日志设置开始     ------------------------------------------------- #
# 基本日志                                                              级别,全部日志,错误日志,控制台输出             (按需控制输出,不要影响程序效率)
log4j.category.com.athena.pc = INFO,PcLog,PcErrorLog,Console

# 全部日志配置,必须在对应盘符建立/logs/pc文件夹,windows系统必须有盘符,unix系统无盘符
log4j.appender.PcLog=org.apache.log4j.RollingFileAppender
log4j.appender.PcLog.File=/logs/pc/RunLog.log
log4j.appender.PcLog.layout=com.log4j.ThreadIDPatternLayout
log4j.appender.PcLog.maxFileSize = 3MB
log4j.appender.PcLog.maxBackupIndex = 5
log4j.appender.PcLog.layout.ConversionPattern=[%T][%t][%d{ISO8601}] %-5p %-x %X{user} %n     %m%n

# 错误日志单独配置,必须在对应盘符建立/logs/pc文件夹,windows系统必须有盘符,unix系统无盘符
log4j.appender.PcErrorLog=org.apache.log4j.RollingFileAppender
log4j.appender.PcErrorLog.File=/logs/pc/ErrorLog.log
log4j.appender.PcErrorLog.layout=com.log4j.ThreadIDPatternLayout
log4j.appender.PcErrorLog.Threshold=error
log4j.appender.PcErrorLog.maxFileSize = 3MB
log4j.appender.PcErrorLog.maxBackupIndex = 5
log4j.appender.PcErrorLog.layout.ConversionPattern=[%T][%t][%d{ISO8601}] %C{3}.%M() %-5p %-x %X{user} %n     %m%n

# ----------------------------------------       排产日志设置结束     ------------------------------------------------- #

# ----------------------------------------       发交日志设置开始     ------------------------------------------------- #
# 基本日志                                                              级别,全部日志,错误日志,控制台输出             (按需控制输出,不要影响程序效率)
log4j.category.com.athena.fj = INFO,FjLog,FjErrorLog,Console

# 全部日志配置,必须在对应盘符建立/logs/fj文件夹,windows系统必须有盘符,unix系统无盘符
log4j.appender.FjLog=org.apache.log4j.RollingFileAppender
log4j.appender.FjLog.File=/logs/fj/RunLog.log
log4j.appender.FjLog.layout=com.log4j.ThreadIDPatternLayout
log4j.appender.FjLog.maxFileSize = 3MB
log4j.appender.FjLog.maxBackupIndex = 5
log4j.appender.FjLog.layout.ConversionPattern=[%T][%t][%d{ISO8601}] %-5p %-x %X{user} %n     %m%n

# 错误日志单独配置,必须在对应盘符建立/logs/fj文件夹,windows系统必须有盘符,unix系统无盘符
log4j.appender.FjErrorLog=org.apache.log4j.RollingFileAppender
log4j.appender.FjErrorLog.File=/logs/fj/ErrorLog.log
log4j.appender.FjErrorLog.layout=com.log4j.ThreadIDPatternLayout
log4j.appender.FjErrorLog.Threshold=error
log4j.appender.FjErrorLog.maxFileSize = 3MB
log4j.appender.FjErrorLog.maxBackupIndex = 5
log4j.appender.FjErrorLog.layout.ConversionPattern=[%T][%t][%d{ISO8601}] %C{3}.%M() %-5p %-x %X{user} %n     %m%n

# ----------------------------------------       发交日志设置结束     ------------------------------------------------- #






# ----------------------------------------       以上可以选择性删除     ------------------------------------------------- #






# ----------------------------------------       通用设置开始     ------------------------------------------------- #
# 控制台输出配置
log4j.appender.Console=org.apache.log4j.ConsoleAppender
log4j.appender.Console.layout=com.log4j.ThreadIDPatternLayout
log4j.appender.Console.layout.ConversionPattern=[%T][%t][%d{ISO8601}] %C{3}.%M() %-5p %-x %X{user} %n     %m%n

# ----------------------------------------       SQL通用设置开始     ------------------------------------------------- #
# SQL日志                                      级别,SQL日志,控制台输出                 (按需控制输出,不要影响程序效率)
log4j.logger.java.sql = DEBUG,SqlLog,Console

# SQL日志单独配置,必须在对应盘符建立/logs文件夹,windows系统必须有盘符,unix系统无盘符
log4j.appender.SqlLog=org.apache.log4j.RollingFileAppender
log4j.appender.SqlLog.File=/logs/SqlLog.log
log4j.appender.SqlLog.layout=com.log4j.ThreadIDPatternLayout
log4j.appender.SqlLog.maxFileSize = 3MB
log4j.appender.SqlLog.maxBackupIndex = 20
log4j.appender.SqlLog.layout.ConversionPattern=[%T][%t][%d{ISO8601}] %C{3}.%M() %-5p %-x %X{user} %n     %m%n

# ----------------------------------------       SQL通用设置结束     ------------------------------------------------- #

# ----------------------------------------       组件日志设置开始     ------------------------------------------------- #
# 基本日志                                                              级别,全部日志,错误日志,控制台输出             (按需控制输出,不要影响程序效率)
log4j.category.com.athena.component = INFO,ComponentLog,ComponentErrorLog,Console

# 全部日志配置,必须在对应盘符建立/logs/component文件夹,windows系统必须有盘符,unix系统无盘符
log4j.appender.ComponentLog=org.apache.log4j.RollingFileAppender
log4j.appender.ComponentLog.File=/logs/component/RunLog.log
log4j.appender.ComponentLog.layout=com.log4j.ThreadIDPatternLayout
log4j.appender.ComponentLog.maxFileSize = 3MB
log4j.appender.ComponentLog.maxBackupIndex = 5
log4j.appender.ComponentLog.layout.ConversionPattern=[%T][%t][%d{ISO8601}] %-5p %-x %X{user} %n     %m%n

# 错误日志单独配置,必须在对应盘符建立/logs/component文件夹,windows系统必须有盘符,unix系统无盘符
log4j.appender.ComponentErrorLog=org.apache.log4j.RollingFileAppender
log4j.appender.ComponentErrorLog.File=/logs/component/ErrorLog.log
log4j.appender.ComponentErrorLog.layout=com.log4j.ThreadIDPatternLayout
log4j.appender.ComponentErrorLog.Threshold=error
log4j.appender.ComponentErrorLog.maxFileSize = 3MB
log4j.appender.ComponentErrorLog.maxBackupIndex = 5
log4j.appender.ComponentErrorLog.layout.ConversionPattern=[%T][%t][%d{ISO8601}] %C{3}.%M() %-5p %-x %X{user} %n     %m%n

# ----------------------------------------       组件日志设置结束     ------------------------------------------------- #

# ----------------------------------------       工具日志设置开始     ------------------------------------------------- #
# 基本日志                                                              级别,全部日志,错误日志,控制台输出             (按需控制输出,不要影响程序效率)
log4j.category.com.athena.util = INFO,UtilLog,UtilErrorLog,Console

# 全部日志配置,必须在对应盘符建立/logs/util文件夹,windows系统必须有盘符,unix系统无盘符
log4j.appender.UtilLog=org.apache.log4j.RollingFileAppender
log4j.appender.UtilLog.File=/logs/util/RunLog.log
log4j.appender.UtilLog.layout=com.log4j.ThreadIDPatternLayout
log4j.appender.UtilLog.maxFileSize = 3MB
log4j.appender.UtilLog.maxBackupIndex = 10
log4j.appender.UtilLog.layout.ConversionPattern=[%T][%t][%d{ISO8601}] %-5p %-x %X{user} %n     %m%n

# 错误日志单独配置,必须在对应盘符建立/logs/util文件夹,windows系统必须有盘符,unix系统无盘符
log4j.appender.UtilErrorLog=org.apache.log4j.RollingFileAppender
log4j.appender.UtilErrorLog.File=/logs/util/ErrorLog.log
log4j.appender.UtilErrorLog.layout=com.log4j.ThreadIDPatternLayout
log4j.appender.UtilErrorLog.Threshold=error
log4j.appender.UtilErrorLog.maxFileSize = 3MB
log4j.appender.UtilErrorLog.maxBackupIndex = 10
log4j.appender.UtilErrorLog.layout.ConversionPattern=[%T][%t][%d{ISO8601}] %C{3}.%M() %-5p %-x %X{user} %n     %m%n

# ----------------------------------------       工具日志设置结束     ------------------------------------------------- #

# ----------------------------------------       平台日志设置开始     ------------------------------------------------- #
# 基本日志                                                              级别,全部日志,错误日志,控制台输出             (按需控制输出,不要影响程序效率)
#log4j.category.com.toft = INFO,ToftLog,ToftErrorLog,Console

# 全部日志配置,必须在对应盘符建立/logs/toft文件夹,windows系统必须有盘符,unix系统无盘符
#log4j.appender.ToftLog=org.apache.log4j.RollingFileAppender
#log4j.appender.ToftLog.File=/logs/toft/RunLog.log
#log4j.appender.ToftLog.layout=com.log4j.ThreadIDPatternLayout
#log4j.appender.ToftLog.maxFileSize = 3MB
#log4j.appender.ToftLog.maxBackupIndex = 10
#log4j.appender.ToftLog.layout.ConversionPattern=[%T][%t][%d{ISO8601}] %-5p %-x %X{user} %n     %m%n

# 错误日志单独配置,必须在对应盘符建立/logs/toft文件夹,windows系统必须有盘符,unix系统无盘符
#log4j.appender.ToftErrorLog=org.apache.log4j.RollingFileAppender
#log4j.appender.ToftErrorLog.File=/logs/toft/ErrorLog.log
#log4j.appender.ToftErrorLog.layout=com.log4j.ThreadIDPatternLayout
#log4j.appender.ToftErrorLog.Threshold=error
#log4j.appender.ToftErrorLog.maxFileSize = 3MB
#log4j.appender.ToftErrorLog.maxBackupIndex = 10
#log4j.appender.ToftErrorLog.layout.ConversionPattern=[%T][%t][%d{ISO8601}] %C{3}.%M() %-5p %-x %X{user} %n     %m%n

# ----------------------------------------       平台日志设置结束     ------------------------------------------------- #

## sdc-core
#log4j.category.com.toft.core3=INFO

## sdc-container
#log4j.category.com.toft.core3.container=INFO

## sdc-aop
#log4j.category.com.toft.core3.aop=INFO

## sdc-transaction
#log4j.category.com.toft.core3.transaction=INFO

## sdc-jdbc
#log4j.category.com.toft.core3.jdbc=INFO

## sdc-ibatis
#log4j.category.com.toft.core3.ibatis=DEBUG

## sdc-cache
#log4j.category.com.toft.core3.cache=INFO

## sdc-mvc
#log4j.category.com.toft.core3.mvc=INFO

## sdc-remoting
#log4j.category.com.toft.core3.remoting=INFO
## sdc-compoment-runner
#log4j.category.com.athena.component=DEBUG

log4j.logger.java.sql.Connection=DEBUG 
log4j.logger.java.sql.PreparedStatement=DEBUG
log4j.logger.java.sql.ResultSet=INFO
# ----------------------------------------       通用设置结束     ------------------------------------------------- #